# optional shell settings/config to source
################################################

# source the env vars prepped by phusion; it's automatically
# sourced by login shell, but login shell via ssh doesn't seem to be
# quite working for us, so let's manually source it:
source /etc/container_environment.sh

unalias deps build build-debug build-ib b bd r rd run run-debug brun bdrun src ib ibbuild ibabuild >/dev/null 2>&1

# TODO: deprecated?
deps() {
    local e
    lean || return 1
    nuget restore QuantConnect.Lean.sln
    e=$?
    popd > /dev/null
    return $e
}


_build() {
    local e
    lean || return 1
    dotnet build QuantConnect.Lean.sln $1
    e=$?
    popd > /dev/null
    return $e
}


build() {
    _build '/property:Configuration=Release'
}


build-debug() {
    _build
}

build-ib() {
    local e
    ib || return 1
    dotnet build QuantConnect.InteractiveBrokersBrokerage.sln
    e=$?
    popd > /dev/null
    return $e
}

build-iba() {
    local e
    iba || return 1

    pushd -- ./java/IBAutomater/ > /dev/null
    $ANT_EXEC  -quiet  # defined in Dockerfile
    e=$?
    if [[ "$e" -ne 0 ]]; then
        popd > /dev/null
        echo "ant build failed w/ $e, won't proceed w/ dotnet build"
        return $e
    fi

    popd > /dev/null

    dotnet build IBAutomater.sln
    e=$?
    popd > /dev/null
    return $e
}

alias src='lean'
alias b='build'
alias bd='build-debug'
alias r='run'
alias rd='run-debug'
alias ibbuild='build-ib'
alias ibabuild='build-iba'


_run() {
    local rls e

    rls="$1"  # Debug | Release
    pushd "$SRC_MOUNT/Launcher/bin/$rls" > /dev/null || return 1
    dotnet QuantConnect.Lean.Launcher.dll < /dev/null  # do not let lean steal our stdin (Press any key...)
    e=$?
    popd > /dev/null
    return $e
}


run() {
    _run Release
}


run-debug() {
    _run Debug
}

brun() {
    build && run
}

bdrun() {
    build-debug && run-debug
}

lean() {
    pushd -- "$SRC_MOUNT" > /dev/null
}

ib() {
    pushd -- "$IBKR_MOUNT" > /dev/null
}

iba() {
    pushd -- "$IBKR_AUTO" > /dev/null
}

ulimit -n 30000

